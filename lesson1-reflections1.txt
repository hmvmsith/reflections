Pretty simple.  
Downloading files is not set up correctly.
simple FC or diff command in cmd prompt. 

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
I would be able to compare versions when things "no longer work".
I could use an older version as a template for a new project.
Versioning would create an audit trail.
And, worst case, if my current version were destroyed I would have something to go back to. 

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
CON- It's easy to forget to commit.
PRO - Each version represents a logical & meaningful change in the code (or file)

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Version control systems like Git are designed to be used for application development, where multiple files are required to create a complete package. 


How can you use the commands git log and git diff to view the history of files?
git log will show the ID of all revisions, and then git diff can be used to compare two versions.

How might using version control make you more confident to make changes that could break something?
I know I could always go back to a good version if my changes don't work. 

Now that you have your workspace set up, what do you want to try using Git for?
Managing my r & rMarkdown files